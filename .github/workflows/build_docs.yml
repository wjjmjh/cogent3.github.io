on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  example-3:
    name: Doc Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
        with:
           path: c3org

      - uses: actions/checkout@v2
        with:
           repository: cogent3/cogent3
           path: c3src
           ref: develop

      - shell: bash -l {0}
        run: |
          mv c3src/doc c3org/doc/doc
          cp c3org/doc/doc/set_working_directory.py c3org/doc/.

      # caching
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('c3org/doc/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('c3org/doc/requirements.txt') }}
            ${{ runner.os }}-pip-

#      - uses: actions/cache@v2
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-

      - uses: "actions/setup-python@v1"
        with:
          python-version: "${{ matrix.python-version }}"

      # Setup virtualenv
      - name: "Setup virtualenv for ${{ matrix.python-version }} on Linux"
        run: |
          python --version
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r c3org/doc/requirements.txt

#      - name: Make conda environment
#        uses: goanpeca/setup-miniconda@v1
#        with:
#           activate-environment: cogent3
#           environment-file: c3org/doc/gh-environment.yml
#           python-version: 3.8

#      - shell: bash -l {0}
#        run: |
#          conda activate cogent3
#          conda info
#          conda list

      # Activate venv.
#      - name: "Activate venv for ${{ matrix.python-version }} on Linux"
#        if: startsWith(runner.os, 'Linux')
#        shell: bash -l {0}
#        run: |
#          source .venv/bin/activate

      # npm install orca
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g electron orca --unsafe-perm=true

      - name: Build docs
        shell: bash -l {0}
        working-directory: c3org/doc/
        run: |
          source .venv/bin/activate
          make github

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: c3org/docs
          publish_branch: master
